// Code generated by goctl. DO NOT EDIT!
// Source: shorturl.proto

package server

import (
	"context"

	"github.com/lichmaker/short-url-micro/rpc/internal/logic"
	"github.com/lichmaker/short-url-micro/rpc/internal/svc"
	"github.com/lichmaker/short-url-micro/rpc/type/short-url-micro"
)

type ShorturlServer struct {
	svcCtx *svc.ServiceContext
	short_url_micro.UnimplementedShorturlServer
}

func NewShorturlServer(svcCtx *svc.ServiceContext) *ShorturlServer {
	return &ShorturlServer{
		svcCtx: svcCtx,
	}
}

func (s *ShorturlServer) Register(ctx context.Context, in *short_url_micro.RegisterRquest) (*short_url_micro.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *ShorturlServer) Verify(ctx context.Context, in *short_url_micro.VerifyRequest) (*short_url_micro.VerifyResponse, error) {
	l := logic.NewVerifyLogic(ctx, s.svcCtx)
	return l.Verify(in)
}

func (s *ShorturlServer) Shorten(ctx context.Context, in *short_url_micro.ShortenRequest) (*short_url_micro.ShortenResponse, error) {
	l := logic.NewShortenLogic(ctx, s.svcCtx)
	return l.Shorten(in)
}

func (s *ShorturlServer) Get(ctx context.Context, in *short_url_micro.GetRequest) (*short_url_micro.GetResponse, error) {
	l := logic.NewGetLogic(ctx, s.svcCtx)
	return l.Get(in)
}
